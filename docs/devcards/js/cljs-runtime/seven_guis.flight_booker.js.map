{"version":3,"sources":["seven_guis/flight_booker.cljs"],"mappings":"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","names":["js/seven-guis","js/seven-guis.flight-booker","js/seven-guis.flight-booker.booking-state","seven-guis.flight-booker/booking-state","reagent.core.atom","p__36025","map__36026","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","seven-guis.flight-booker/disable-return?","return?","cljs.core/not","seven-guis.flight-booker/invalid-date?","date","cljs.core/re-find","seven-guis.flight-booker/get-date","date-string","vec__36028","cljs.core.nth","_","day","month","year","js/Date","seven-guis.flight-booker/process-date","vec__36031","day-str","month-str","year-str","p__36034","map__36035","seven-guis.flight-booker/disable-book-button?","start-date","return-date","start-date-obj","return-date-obj","or__4126__auto__","and__4115__auto__","p__36037","map__36038","seven-guis.flight-booker/booked-message","way","with-return","p1__36040#","p1__36041#","p1__36042#","seven-guis.flight-booker/component","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core._EQ_","cljs.core/deref","js/alert","seven-guis.flight-booker/register-component!","seven-guis.util/define-custom-element!"],"sourcesContent":["(ns seven-guis.flight-booker\n  (:require\n    [reagent.core :as reagent]\n    [seven-guis.util :as util]))\n\n(defonce booking-state (reagent/atom {:return? false\n                                      :start-date \"01.01.2021\"\n                                      :return-date \"01.01.2021\"}))\n\n(defn disable-return? [{:keys [return?]}]\n  (not return?))\n\n(defn invalid-date? [date]\n  (not (re-find #\"^\\s*\\d\\d\\D\\d\\d\\D\\d\\d\\d\\d\\s*$\" date)))\n\n(defn get-date [date-string]\n  (let [[_ day month year] (re-find #\"(\\d\\d)\\D(\\d\\d)\\D(\\d\\d\\d\\d)\" date-string)]\n    (js/Date. year (dec month) day)))\n\n(defn process-date [date-string]\n  (if (invalid-date? date-string)\n    date-string\n    (let [date (get-date date-string)\n          [day month year] [(.getDate date) (inc (.getMonth date)) (.getFullYear date)]\n        day-str (if (< day 10)\n                  (str \"0\"day)\n                  (str day))\n        month-str (if (< month 10)\n                    (str \"0\"month)\n                    (str month))\n        year-str (str year)]\n    (str day-str\".\"month-str\".\"year-str))))\n\n(defn disable-book-button? [{:keys [return? start-date return-date]}]\n  (let [start-date-obj (get-date start-date)\n        return-date-obj (get-date return-date)]\n    (or (invalid-date? start-date)\n        (and return? (invalid-date? return-date))\n        (and return? (< return-date-obj start-date-obj)))))\n\n(defn booked-message [{:keys [return? start-date return-date]}]\n  (let [way (if return? \"two-way\" \"one-way\")\n        with-return (when return? (str \" with return on \"return-date))]\n    (str \"You have bought a \"way\" flight on \"start-date with-return\".\")))\n\n(defn component []\n  [:<>\n   [:style \"\n    div {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n\n    * {\n      margin: 2px;\n      border-radius: 6px;\n      min-width: 160px;\n    }\n    \n    select {\n      text-align-last: center;\n    }\n    \"]\n   [:div\n    [:select {:onChange #(swap! booking-state assoc :return? (= \"return\" (-> % .-target .-value)))}\n     [:option {:value \"one-way\"} \"One-way Flight\"]\n     [:option {:value \"return\"} \"Return Flight\"]]\n    [:input {:type \"text\"\n             :value (:start-date @booking-state) \n             :onChange #(swap! booking-state assoc :start-date (process-date (-> % .-target .-value)))\n             :style {:backgroundColor (if (invalid-date? (:start-date @booking-state))\n                                        \"red\"\n                                        \"inherit\")}}]\n    [:input {:type \"text\"\n             :value (:return-date @booking-state)\n             :disabled (disable-return? @booking-state)\n             :onChange #(swap! booking-state assoc :return-date (process-date (-> % .-target .-value)))\n             :style {:backgroundColor (if (and (not (disable-return? @booking-state))\n                                               (invalid-date? (:return-date @booking-state)))\n                                        \"red\"\n                                        \"inherit\")}}]\n    [:button {:type \"button\"\n              :onClick #(js/alert (booked-message @booking-state))\n              :disabled (disable-book-button? @booking-state)}\n     \"Book\"]]])\n\n(defn ^:dev/after-load register-component! []\n  (util/define-custom-element! {:element-name \"flight-booker\"\n                                :view-component component}))\n\n(register-component!)\n\n(comment\n  (require '[cljs.test :refer [is testing]])\n  (testing\n    (is (= \"You have bought a one-way flight on 11.04.2022.\"\n           (booked-message {:return? false :start-date \"11.04.2022\" :return-date \"01.01.2021\"})))\n    (is (= \"You have bought a one-way flight on 01.01.2021.\"\n           (booked-message {:return? false :start-date \"01.01.2021\" :return-date \"01.01.2021\"})))\n    (is (= \"You have bought a two-way flight on 01.01.2021 with return on 01.05.2021.\"\n           (booked-message {:return? true :start-date \"01.01.2021\" :return-date \"01.05.2021\"})))\n    (is (= \"You have bought a two-way flight on 01.01.2021 with return on 01.01.2021.\"\n           (booked-message {:return? true :start-date \"01.01.2021\" :return-date \"01.01.2021\"}))))\n  (testing\n    (is (= false (disable-book-button? {:return? true :start-date \"01.01.2021\" :return-date \"01.01.2021\"})))\n    (is (= false (disable-book-button? {:return? false :start-date \"01.01.2021\" :return-date \"01.01.2020\"})))\n    (is (= false (disable-book-button? {:return? false :start-date \"01.01.2021\" :return-date \"\"})))\n    (is (= false (disable-book-button? {:return? false :start-date \"01.01.2021\" :return-date \"wrong\"})))\n    (is (= true (disable-book-button? {:return? true :start-date \"01.01.2021\" :return-date \"wrong\"})))\n    (is (= true (disable-book-button? {:return? true :start-date \"01.01.2021\" :return-date \"01.01.2020\"})))\n    (is (= true (disable-book-button? {:return? true :start-date \"wrong\" :return-date \"01.01.2021\"})))\n    (is (= true (disable-book-button? {:return? false :start-date \"wrong\" :return-date \"01.01.2021\"}))))\n  (testing\n    (is (= \"01.01.2021x\" (process-date \"01.01.2021x\")))\n    (is (= \"01.01.2021\" (process-date \"01.01.2021\")))\n    (is (= \"01.01.2021\" (process-date \"01-13-2020\"))))\n  (testing\n    (is (= false (invalid-date? \" 01-01-2021\"))) \n    (is (= false (invalid-date? \"01-01-2021 \"))) \n    (is (= true (invalid-date? \"bla\"))) \n    (is (= true (invalid-date? \"15.12.2014x\"))) \n    (is (= false (invalid-date? \"15.12.2014\"))))\n  )\n"]}