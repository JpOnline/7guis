{"version":3,"sources":["seven_guis/temp_conv.cljs"],"mappings":";AAKA,AAAA,AAAAA,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAW,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;;AAGrB,AAAA,AAAMC,AAAqBC;AAA3B,AACE,AAAA,AAAM,AAAGA,AAAE,AAAA,AAAA;;AAEb,AAAA,AAAMC,AAAqBC;AAA3B,AACE,AAAG,AAAA,AAAGA,AAAM,AAAA,AAAA;;AAEd,AAAA,AAAMC,AAAsBC,AAASC;AAArC,AACMD,AACA,AAAA,AAACE,AAAkBD,AACnB,AAAA,AAACC,AAAe,AAACL,AAAoBI;;AAE3C,AAAA,AAAME,AAAmBH,AAASI;AAAlC,AACMJ,AACA,AAAA,AAACE,AAAeE,AAChB,AAAA,AAACF,AAAkB,AAACP,AAAoBS;;AAE9C,AAAA,AAAMG;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAF,AAQ6B,AAAA,AAAA,AAAAG,AAAWf;AARxC,AASkB,AAACgB,AAAMhB,AAAWU,AAAkB,AAAA,AAAAE;AATtD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAgB4B,AAAA,AAAA,AAAAE,AAAcf;AAhB1C,AAiBiB,AAACgB,AAAMhB,AAAWM,AAAqB,AAAA,AAAAO;AAjBxD,AAAA,AAAA,AAAA,AAAA,AAAA;;AAsBA,AAAA,AAAuBI;AAAvB,AACE,AAAA,AAAA,AAAA,AAAA,AAACC,AAC6CJ;;AAEhD,AAACG;AAED","names":["js/seven-guis","js/seven-guis.temp-conv","js/seven-guis.temp-conv.temp-state","seven-guis.temp-conv/temp-state","reagent.core.atom","seven-guis.temp-conv/celsius->fahrenheit","c","seven-guis.temp-conv/fahrenheit->celsius","f","seven-guis.temp-conv/on-change-fahrenheit","temp-map","fahrenheit-value","cljs.core.assoc","seven-guis.temp-conv/on-change-celsius","celsius-value","p1__35867#","p1__35868#","seven-guis.temp-conv/component","cljs.core/deref","cljs.core.swap_BANG_","seven-guis.temp-conv/register-component!","seven-guis.util/define-custom-element!"],"sourcesContent":["(ns seven-guis.temp-conv\n  (:require\n    [reagent.core :as reagent]\n    [seven-guis.util :as util]))\n\n(defonce temp-state (reagent/atom {:celsius 0\n                               :fahrenheit 32}))\n\n(defn celsius->fahrenheit [c]\n  (+ 32 (* c (/ 9 5))))\n\n(defn fahrenheit->celsius [f]\n  (* (- f 32) (/ 5 9)))\n\n(defn on-change-fahrenheit [temp-map fahrenheit-value]\n  (-> temp-map\n      (assoc :fahrenheit fahrenheit-value)\n      (assoc :celsius (fahrenheit->celsius fahrenheit-value))))\n\n(defn on-change-celsius [temp-map celsius-value]\n  (-> temp-map\n      (assoc :celsius celsius-value)\n      (assoc :fahrenheit (celsius->fahrenheit celsius-value))))\n\n(defn component []\n  [:<>\n   [:style\n    \"@import\n    \\\"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\\\"\"]\n   [:div.flex.justify-evenly\n    [:div.flex.flex-col.border.rounded.border-gray-400\n     [:input#celsius.text-center\n      {:type \"number\" :value (:celsius @temp-state)\n       :onChange #(swap! temp-state on-change-celsius (-> % .-target .-value))}]\n     [:label.text-xl.text-center\n      {:for \"celsius\"}\n      \"Celsius\"]]\n   [:span.text-6xl.self-center \" = \"]\n   [:div.flex.flex-col.border.rounded.border-gray-400\n    [:input#fahrenheit.text-center\n     {:type \"number\" :value (:fahrenheit @temp-state)\n      :onChange #(swap! temp-state on-change-fahrenheit (-> % .-target .-value))}]\n    [:label.text-xl.text-center\n     {:for \"fahrenheit\"}\n      \"Fahrenheit\"]]]])\n\n(defn ^:dev/after-load register-component! []\n  (util/define-custom-element! {:element-name \"temp-conv\"\n                                :view-component component}))\n\n(register-component!)\n\n(comment\n  (= 41 (celsius->fahrenheit 5))\n  (= 5 (fahrenheit->celsius 41))\n  )\n"]}